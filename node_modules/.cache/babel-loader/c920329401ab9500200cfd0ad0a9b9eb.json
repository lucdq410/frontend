{"ast":null,"code":"import _slicedToArray from \"D:\\\\netbean\\\\NodeJS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\netbean\\\\NodeJS\\\\frontend\\\\src\\\\BodyContent\\\\customer\\\\CustomerViewDoctor\\\\CustomerViewDoctor.js\";\nimport React, { useState } from 'react';\nimport './CustomerViewDoctor.css';\nimport axios from 'axios';\nvar timeOptions = [{\n  label: '8h - 9h'\n}, {\n  label: '9h - 10h'\n}, {\n  label: '10h - 11h'\n}, {\n  label: '13h - 14h'\n}, {\n  label: '15h - 16h'\n}];\nfunction CustomerViewDoctor() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctors = _useState2[0],\n    setDoctors = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDate = _useState4[0],\n    setSelectedDate = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedTime = _useState6[0],\n    setSelectedTime = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isConfirmationEnabled = _useState8[0],\n    setIsConfirmationEnabled = _useState8[1];\n  var handleDateChange = function handleDateChange(e) {\n    var selectedDate = e.target.value;\n    setSelectedDate(selectedDate);\n    setIsConfirmationEnabled(selectedDate !== '' && selectedTime !== '');\n  };\n  var handleTimeSelection = function handleTimeSelection(time) {\n    setSelectedTime(time);\n    setIsConfirmationEnabled(selectedDate !== '' && time !== '');\n  };\n  var handleConfirmation = function handleConfirmation() {\n    if (isConfirmationEnabled) {\n      // Send POST request to the API\n      axios.post('http://localhost:3000/api/slot/getDoctorByTime', {\n        date: new Date(selectedDate).toISOString().split('T')[0],\n        time: selectedTime\n      }).then(function (response) {\n        // Handle the response from the API\n        var doctors = response.data.doctors.doctors;\n        console.log(doctors);\n        setDoctors(doctors);\n      }).catch(function (error) {\n        // Handle any error that occurs during the request\n        console.error('API Error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-view-doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Ch\\u1ECDn th\\u1EDDi gian trong ng\\xE0y\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Ng\\xE0y:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, timeOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: option.label,\n      className: \"time-option\".concat(selectedTime === option.label ? ' active' : ''),\n      onClick: function onClick() {\n        return handleTimeSelection(option.label);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirmation-button\",\n    disabled: !isConfirmationEnabled,\n    onClick: handleConfirmation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"X\\xE1c nh\\u1EADn\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctor-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Danh s\\xE1ch b\\xE1c s\\u0129:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, doctors.map(function (doctor) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: doctor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, doctor.name);\n  }))));\n}\nexport default CustomerViewDoctor;","map":{"version":3,"names":["React","useState","axios","timeOptions","label","CustomerViewDoctor","_this","_useState","_useState2","_slicedToArray","doctors","setDoctors","_useState3","_useState4","selectedDate","setSelectedDate","_useState5","_useState6","selectedTime","setSelectedTime","_useState7","_useState8","isConfirmationEnabled","setIsConfirmationEnabled","handleDateChange","e","target","value","handleTimeSelection","time","handleConfirmation","post","date","Date","toISOString","split","then","response","data","console","log","catch","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","option","key","concat","onClick","disabled","doctor","name"],"sources":["D:/netbean/NodeJS/frontend/src/BodyContent/customer/CustomerViewDoctor/CustomerViewDoctor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CustomerViewDoctor.css';\r\nimport axios from 'axios';\r\n\r\nconst timeOptions = [\r\n  { label: '8h - 9h' },\r\n  { label: '9h - 10h' },\r\n  { label: '10h - 11h' },\r\n  { label: '13h - 14h' },\r\n  { label: '15h - 16h' }\r\n];\r\n\r\nfunction CustomerViewDoctor() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [isConfirmationEnabled, setIsConfirmationEnabled] = useState(false);\r\n\r\n  const handleDateChange = (e) => {\r\n    const selectedDate = e.target.value;\r\n    setSelectedDate(selectedDate);\r\n    setIsConfirmationEnabled(selectedDate !== '' && selectedTime !== '');\r\n  };\r\n\r\n  const handleTimeSelection = (time) => {\r\n    setSelectedTime(time);\r\n    setIsConfirmationEnabled(selectedDate !== '' && time !== '');\r\n  };\r\n\r\n  const handleConfirmation = () => {\r\n    if (isConfirmationEnabled) {\r\n      // Send POST request to the API\r\n      axios\r\n        .post('http://localhost:3000/api/slot/getDoctorByTime', {\r\n          date: new Date(selectedDate).toISOString().split('T')[0],\r\n          time: selectedTime,\r\n        })\r\n        .then((response) => {\r\n          // Handle the response from the API\r\n          const { doctors } = response.data.doctors;\r\n          console.log(doctors);\r\n          setDoctors(doctors);\r\n        })\r\n        .catch((error) => {\r\n          // Handle any error that occurs during the request\r\n          console.error('API Error:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-view-doctor\">\r\n      <div className=\"time-selection\">\r\n        <h2>Chọn thời gian trong ngày</h2>\r\n        <div className=\"date-input\">\r\n          <label htmlFor=\"date\">Ngày:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"time-options\">\r\n          {timeOptions.map((option) => (\r\n            <button\r\n              key={option.label}\r\n              className={`time-option${selectedTime === option.label ? ' active' : ''}`}\r\n              onClick={() => handleTimeSelection(option.label)}\r\n            >\r\n              {option.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"confirmation-button\"\r\n          disabled={!isConfirmationEnabled}\r\n          onClick={handleConfirmation}\r\n        >\r\n          Xác nhận\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"doctor-list\">\r\n        <h3>Danh sách bác sĩ:</h3>\r\n        <ul>\r\n          {doctors.map((doctor) => (\r\n            <li key={doctor.id}>{doctor.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerViewDoctor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}